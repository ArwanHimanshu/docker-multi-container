# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

     
      # - name: building nginx
      #   run: docker build -t supersaver/multi-react-server ./nginx   

      # - name: building server
      #   run: docker build -t supersaver/multi-react-server ./server

      # - name: building worker
      #   run: docker build -t supersaver/multi-react-worker ./worker
        
      # - name: Login to docker hub
      #   uses: actions-hub/docker/login@master
      #   env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_ID }}
      #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}   


      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: multi-client
          
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:client-latest ./client
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:client-latest

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:server-latest ./server
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:server-latest

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:worker-latest ./worker
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:worker-latest

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:nginx-latest ./nginx
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:nginx-latest


      # - name: build and push client image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./client
      #     tags: supersaver/multi-docker-client:latest
      #     push: true

      # - name: pushing worker image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./worker
      #     tags: supersaver/multi-docker-worker
      #     push: true


      # - name: pushing server image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./server
            
      #     tags: |
                
      #           supersaver/multi-docker-server
      #     push: true   

      # - name: pushing nginx image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./server
            
      #     tags: |
      #           supersaver/multi-docker-nginx
      #     push: true            

      # - name: pushing worker image
      #   run: docker  push  supersaver/multi-react-worker         

      # - name: pushing nginx image
      #   run: docker  push  supersaver/multi-react-nginx


      # - name: pushing server image
      #   run: docker  push  supersaver/multi-react-server
     
